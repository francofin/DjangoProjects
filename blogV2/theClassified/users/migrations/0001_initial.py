# Generated by Django 4.0.4 on 2022-08-20 06:20

import cloudinary.models
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('profile_picture', models.ImageField(blank=True, default=None, null=True, upload_to='')),
                ('about', models.TextField()),
                ('store_name', models.CharField(blank=True, default=None, max_length=300, null=True)),
                ('company_number', models.CharField(blank=True, default=None, max_length=300, null=True)),
                ('company_email', models.EmailField(blank=True, default=None, max_length=300, null=True, validators=[django.core.validators.EmailValidator()])),
                ('about1', models.TextField(blank=True, default=None, null=True)),
                ('about2', models.TextField(blank=True, default=None, null=True)),
                ('about3', models.TextField(blank=True, default=None, null=True)),
                ('about4', models.TextField(blank=True, default=None, null=True)),
                ('about5', models.TextField(blank=True, default=None, null=True)),
                ('about6', models.TextField(blank=True, default=None, null=True)),
                ('about7', models.TextField(blank=True, default=None, null=True)),
                ('about8', models.TextField(blank=True, default=None, null=True)),
                ('about9', models.TextField(blank=True, default=None, null=True)),
                ('about10', models.TextField(blank=True, default=None, null=True)),
                ('about11', models.TextField(blank=True, default=None, null=True)),
                ('about12', models.TextField(blank=True, default=None, null=True)),
                ('about13', models.TextField(blank=True, default=None, null=True)),
                ('about14', models.TextField(blank=True, default=None, null=True)),
                ('user_security_identifier', models.CharField(max_length=500, unique=True)),
                ('phone_number', models.CharField(blank=True, default=None, max_length=300, null=True)),
                ('cover_picture', models.ImageField(upload_to='images/')),
                ('profile_picture6', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('profile_picture1', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('profile_picture2', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('profile_picture3', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('profile_picture4', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('profile_picture5', cloudinary.models.CloudinaryField(max_length=255, verbose_name='image')),
                ('profile_picture7', models.ImageField(blank=True, default=None, null=True, upload_to='images/')),
                ('profile_picture8', models.ImageField(blank=True, default=None, null=True, upload_to='images/')),
                ('profile_picture9', models.ImageField(blank=True, default=None, null=True, upload_to='images/')),
                ('profile_picture11', models.ImageField(blank=True, default=None, null=True, upload_to='images/')),
                ('profile_picture12', models.ImageField(blank=True, default=None, null=True, upload_to='images/')),
                ('profile_picture10', models.ImageField(blank=True, default=None, null=True, upload_to='images/')),
                ('date_of_birth', models.DateField(null=True)),
                ('resume', models.FileField(blank=True, null=True, upload_to='')),
                ('document', models.FileField(blank=True, null=True, upload_to='')),
                ('document1', models.FileField(blank=True, null=True, upload_to='')),
                ('document2', models.FileField(blank=True, null=True, upload_to='')),
                ('document3', models.FileField(blank=True, null=True, upload_to='')),
                ('document4', models.FileField(blank=True, null=True, upload_to='')),
                ('role', models.CharField(choices=[('Subscriber', 'Subscriber'), ('Seller', 'Seller'), ('Admin', 'Admin')], max_length=300)),
                ('stripe_account_id', models.CharField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
